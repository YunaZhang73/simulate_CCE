p_title
matrix_p<-ggplot()+
geom_rect(data=subdf,aes(xmin=eff_left,xmax=eff_left+1,ymin=freq_left,ymax=freq_left+1,fill=relFreq))+
scale_fill_viridis_c(trans='log10',name="Proportion",breaks=c(1e-4,1e-3,1e-2),
labels=TeX(c("$10^{-4}","$10^{-3}","$10^{-2}")))+
facet_grid(speed_omega~.,labeller=labeller(speed_omega=as_labeller(label_speed,label_parsed)))+
geom_vline(xintercept = 23,col='red')+
scale_x_continuous(breaks=c(3,13,23,33,43),labels=c(-4,-2,0,2,4))+
scale_y_continuous(breaks=c(1,2,3,4,5,9,13),
labels=TeX(c("0","$10^{-4}","$10^{-3}","$10^{-2}","0.1","0.5","0.9")))+
geom_text(data=sub_num_df,aes(x=11,y=12,label=paste0("n=",n_segre)))+
labs(title=TeX(p_title),x=TeX("$Effect size (\\omega)"),y="Allele frequency")+
theme(panel.grid.major = element_line(),legend.position="bottom",aspect.ratio = 0.6,
axis.text = element_text(size=9))
matrix_p
p_title=paste0("$\\chi = ", sdMutation0^2/Vs0,
"(\\ Vs = ", Vs0,
",\\ \\omega = ", sdMutation0, ")$")
matrix_p<-ggplot()+
geom_rect(data=subdf,aes(xmin=eff_left,xmax=eff_left+1,ymin=freq_left,ymax=freq_left+1,fill=relFreq))+
scale_fill_viridis_c(trans='log10',name="Proportion",breaks=c(1e-4,1e-3,1e-2),
labels=TeX(c("$10^{-4}","$10^{-3}","$10^{-2}")))+
facet_grid(speed_omega~.,labeller=labeller(speed_omega=as_labeller(label_speed,label_parsed)))+
geom_vline(xintercept = 23,col='red')+
scale_x_continuous(breaks=c(3,13,23,33,43),labels=c(-4,-2,0,2,4))+
scale_y_continuous(breaks=c(1,2,3,4,5,9,13),
labels=TeX(c("0","$10^{-4}","$10^{-3}","$10^{-2}","0.1","0.5","0.9")))+
geom_text(data=sub_num_df,aes(x=11,y=12,label=paste0("n=",n_segre)))+
labs(title=TeX(p_title),x=TeX("$Effect size (\\omega)"),y="Allele frequency")+
theme(panel.grid.major = element_line(),legend.position="bottom",aspect.ratio = 0.6,
axis.text = element_text(size=9))
matrix_p
p_title=paste0("$\\chi = ", sdMutation0^2/Vs0,
"(Vs=", Vs0,
",\\ \\omega=", sdMutation0, ")$")
matrix_p<-ggplot()+
geom_rect(data=subdf,aes(xmin=eff_left,xmax=eff_left+1,ymin=freq_left,ymax=freq_left+1,fill=relFreq))+
scale_fill_viridis_c(trans='log10',name="Proportion",breaks=c(1e-4,1e-3,1e-2),
labels=TeX(c("$10^{-4}","$10^{-3}","$10^{-2}")))+
facet_grid(speed_omega~.,labeller=labeller(speed_omega=as_labeller(label_speed,label_parsed)))+
geom_vline(xintercept = 23,col='red')+
scale_x_continuous(breaks=c(3,13,23,33,43),labels=c(-4,-2,0,2,4))+
scale_y_continuous(breaks=c(1,2,3,4,5,9,13),
labels=TeX(c("0","$10^{-4}","$10^{-3}","$10^{-2}","0.1","0.5","0.9")))+
geom_text(data=sub_num_df,aes(x=11,y=12,label=paste0("n=",n_segre)))+
labs(title=TeX(p_title),x=TeX("$Effect size (\\omega)"),y="Allele frequency")+
theme(panel.grid.major = element_line(),legend.position="bottom",aspect.ratio = 0.6,
axis.text = element_text(size=9))
matrix_p
p_title=paste0("$\\chi = ", sdMutation0^2/Vs0,
"(Vs=", Vs0,
",\\omega=", sdMutation0, ")$")
matrix_p<-ggplot()+
geom_rect(data=subdf,aes(xmin=eff_left,xmax=eff_left+1,ymin=freq_left,ymax=freq_left+1,fill=relFreq))+
scale_fill_viridis_c(trans='log10',name="Proportion",breaks=c(1e-4,1e-3,1e-2),
labels=TeX(c("$10^{-4}","$10^{-3}","$10^{-2}")))+
facet_grid(speed_omega~.,labeller=labeller(speed_omega=as_labeller(label_speed,label_parsed)))+
geom_vline(xintercept = 23,col='red')+
scale_x_continuous(breaks=c(3,13,23,33,43),labels=c(-4,-2,0,2,4))+
scale_y_continuous(breaks=c(1,2,3,4,5,9,13),
labels=TeX(c("0","$10^{-4}","$10^{-3}","$10^{-2}","0.1","0.5","0.9")))+
geom_text(data=sub_num_df,aes(x=11,y=12,label=paste0("n=",n_segre)))+
labs(title=TeX(p_title),x=TeX("$Effect size (\\omega)"),y="Allele frequency")+
theme(panel.grid.major = element_line(),legend.position="bottom",aspect.ratio = 0.6,
axis.text = element_text(size=9))
matrix_p
for(Vs0 in c(1,10,100)){
for(sdMutation0 in c(0.05,0.1,0.5)){
subdf<-subset(segre_matrix,Vs==Vs0 & sdMutation==sdMutation0)
sub_num_df<-subset(num_df,Vs==Vs0 & sdMutation==sdMutation0)
p_title=paste0("$\\chi = ", sdMutation0^2/Vs0,
"(Vs=", Vs0,
",\\omega=", sdMutation0, ")$")
matrix_p<-ggplot()+
geom_rect(data=subdf,aes(xmin=eff_left,xmax=eff_left+1,ymin=freq_left,ymax=freq_left+1,fill=relFreq))+
scale_fill_viridis_c(trans='log10',name="Proportion",breaks=c(1e-4,1e-3,1e-2),
labels=TeX(c("$10^{-4}","$10^{-3}","$10^{-2}")))+
facet_grid(speed_omega~.,labeller=labeller(speed_omega=as_labeller(label_speed,label_parsed)))+
geom_vline(xintercept = 23,col='red')+
scale_x_continuous(breaks=c(3,13,23,33,43),labels=c(-4,-2,0,2,4))+
scale_y_continuous(breaks=c(1,2,3,4,5,9,13),
labels=TeX(c("0","$10^{-4}","$10^{-3}","$10^{-2}","0.1","0.5","0.9")))+
geom_text(data=sub_num_df,aes(x=11,y=12,label=paste0("n=",n_segre)))+
labs(title=TeX(p_title),x=TeX("$Effect size (\\omega)"),y="Allele frequency")+
theme(panel.grid.major = element_line(),legend.position="bottom",aspect.ratio = 0.6,
axis.text = element_text(size=9))
assign(paste0("Vs",Vs0,"sd",sdMutation0),matrix_p)
}
}
pdf("output/genetic_architecture_traits.pdf",width=8.2,height=11)
ggarrange(Vs1sd0.05,Vs1sd0.1,Vs1sd0.5,common.legend = T,nrow=1)
ggarrange(Vs10sd0.05,Vs10sd0.1,Vs10sd0.5,common.legend = T,nrow=1)
ggarrange(Vs100sd0.05,Vs100sd0.1,Vs100sd0.5,common.legend = T,nrow=1)
dev.off()
for(Vs0 in c(1,10,100)){
for(sdMutation0 in c(0.05,0.1,0.5)){
subdf<-subset(segre_matrix,Vs==Vs0 & sdMutation==sdMutation0)
sub_num_df<-subset(num_df,Vs==Vs0 & sdMutation==sdMutation0)
p_title=paste0("$\\chi = ", sdMutation0^2/Vs0,
"(V_s=", Vs0,
",\\omega=", sdMutation0, ")$")
matrix_p<-ggplot()+
geom_rect(data=subdf,aes(xmin=eff_left,xmax=eff_left+1,ymin=freq_left,ymax=freq_left+1,fill=relFreq))+
scale_fill_viridis_c(trans='log10',name="Proportion",breaks=c(1e-4,1e-3,1e-2),
labels=TeX(c("$10^{-4}","$10^{-3}","$10^{-2}")))+
facet_grid(speed_omega~.,labeller=labeller(speed_omega=as_labeller(label_speed,label_parsed)))+
geom_vline(xintercept = 23,col='red')+
scale_x_continuous(breaks=c(3,13,23,33,43),labels=c(-4,-2,0,2,4))+
scale_y_continuous(breaks=c(1,2,3,4,5,9,13),
labels=TeX(c("0","$10^{-4}","$10^{-3}","$10^{-2}","0.1","0.5","0.9")))+
geom_text(data=sub_num_df,aes(x=11,y=12.5,label=paste0("n=",n_segre)))+
labs(title=TeX(p_title),x=TeX("$Effect size (\\omega)"),y="Allele frequency")+
theme(panel.grid.major = element_line(),legend.position="bottom",aspect.ratio = 0.6,
axis.text = element_text(size=9))
assign(paste0("Vs",Vs0,"sd",sdMutation0),matrix_p)
}
}
pdf("output/genetic_architecture_traits.pdf",width=8.2,height=11)
ggarrange(Vs1sd0.05,Vs1sd0.1,Vs1sd0.5,common.legend = T,nrow=1)
ggarrange(Vs10sd0.05,Vs10sd0.1,Vs10sd0.5,common.legend = T,nrow=1)
ggarrange(Vs100sd0.05,Vs100sd0.1,Vs100sd0.5,common.legend = T,nrow=1)
dev.off()
for(Vs0 in c(1,10,100)){
for(sdMutation0 in c(0.05,0.1,0.5)){
subdf<-subset(segre_matrix,Vs==Vs0 & sdMutation==sdMutation0)
sub_num_df<-subset(num_df,Vs==Vs0 & sdMutation==sdMutation0)
p_title=paste0("$\\chi = ", sdMutation0^2/Vs0,
"\\ (V_s=", Vs0,
",\\omega=", sdMutation0, ")$")
matrix_p<-ggplot()+
geom_rect(data=subdf,aes(xmin=eff_left,xmax=eff_left+1,ymin=freq_left,ymax=freq_left+1,fill=relFreq))+
scale_fill_viridis_c(trans='log10',name="Proportion",breaks=c(1e-4,1e-3,1e-2),
labels=TeX(c("$10^{-4}","$10^{-3}","$10^{-2}")))+
facet_grid(speed_omega~.,labeller=labeller(speed_omega=as_labeller(label_speed,label_parsed)))+
geom_vline(xintercept = 23,col='red')+
scale_x_continuous(breaks=c(3,13,23,33,43),labels=c(-4,-2,0,2,4))+
scale_y_continuous(breaks=c(1,2,3,4,5,9,13),
labels=TeX(c("0","$10^{-4}","$10^{-3}","$10^{-2}","0.1","0.5","0.9")))+
geom_text(data=sub_num_df,aes(x=11,y=12.5,label=paste0("n=",n_segre)))+
labs(title=TeX(p_title),x=TeX("$Effect size (\\omega)"),y="Allele frequency")+
theme(panel.grid.major = element_line(),legend.position="bottom",aspect.ratio = 0.6,
axis.text = element_text(size=9))
assign(paste0("Vs",Vs0,"sd",sdMutation0),matrix_p)
}
}
pdf("output/genetic_architecture_traits.pdf",width=8.2,height=11)
getwd()
knitr::opts_knit$set(root.dir = "/Users/yuna/B6/simulation/",echo = T,message =  F,warning=F,results = "hide")
knitr::opts_knit$set(root.dir = "/Users/yuna/B6/simulation/",echo = T,message =  F,warning=F,results = "hide")
pdf("output/genetic_architecture_traits.pdf",width=8.2,height=11)
ggarrange(Vs1sd0.05,Vs1sd0.1,Vs1sd0.5,common.legend = T,nrow=1)
ggarrange(Vs10sd0.05,Vs10sd0.1,Vs10sd0.5,common.legend = T,nrow=1)
ggarrange(Vs100sd0.05,Vs100sd0.1,Vs100sd0.5,common.legend = T,nrow=1)
dev.off()
knitr::opts_knit$set(root.dir = "/Users/yuna/B6/simulation/",echo = T,message =  F,warning=F,results = "hide")
knitr::opts_knit$set(root.dir = "/Users/yuna/B6/simulation/",echo = T,message =  F,warning=F,results = "hide")
library(dplyr)
library(reshape2)
library(ggplot2)
library(ggpmisc)# add linear regression equation to figures
library(latex2exp)
library(ggpubr)# multiple figures in a page
library(scales)
library(cowplot)# get_legend() & plot_grid() functions
N=10000
theta=7e-10 * 2e4 * 1e6
paras<-rbind(data.frame(Vs=1,sdMutation=0.05,speedCoef=c(0.002,0.005,0.01,0.02,0.05,0.1,0.2,0.3,0.35,0.38,0.39,0.4,0.5,0.53,0.55,0.8,1.0,1.2,1.4,1.5,1.6)),
data.frame(Vs=1,sdMutation=0.1,speedCoef=c(0.002,0.005,0.01,0.02,0.05,0.1,0.2,0.3,0.4,0.5,1.0,1.1,1.2,1.3,1.6,1.65,2.2,2.8,2.9,3.0,3.2,3.4,3.6)),
data.frame(Vs=1,sdMutation=0.5,speedCoef=c(0.002,0.005,0.01,0.02,0.05,0.1,0.2,0.3,0.4,0.5,1.0,2.0,3.0,6.5,10.0,11.0,12.0,12.5,13.5,14.0,15.0,16.0,17.0,18.0,18.2,20.0,20.5,21.0)),
data.frame(Vs=10,sdMutation=0.05,speedCoef=c(0.002,0.005,0.01,0.02,0.05,0.07,0.08,0.09,0.1,0.11,0.2,0.3,0.4)),
data.frame(Vs=10,sdMutation=0.1,speedCoef=c(0.002,0.005,0.01,0.02,0.05,0.1,0.15,0.18,0.2,0.22,0.23,0.24,0.3,0.4,0.5,0.6,0.7,0.8)),
data.frame(Vs=10,sdMutation=0.5,speedCoef=c(0.002,0.005,0.01,0.02,0.05,0.1,0.2,0.3,0.4,0.5,1.3,2.3,2.32,2.35,2.4,3.3,3.35,4.3,1.0,4.5,4.6,4.9,5.0,5.2,5.4,6.0)),
data.frame(Vs=100,sdMutation=0.05,speedCoef=c(0.002,0.005,0.01,0.02,0.025,0.03,0.031,0.035,0.04,0.05,0.1,0.2)),
data.frame(Vs=100,sdMutation=0.1,speedCoef=c(0.002,0.005,0.01,0.02,0.03,0.04,0.045,0.05,0.055,0.057,0.1,0.2,0.3)),
data.frame(Vs=100,sdMutation=0.5,speedCoef=c(0.002,0.005,0.01,0.02,0.05,0.1,0.2,0.3,0.35,0.38,0.39,0.4,0.5,0.52,0.55,0.7,0.9,1.1,1.3,1.4,1.5))
)
theme_set(theme_classic())
theme_update(text=element_text(size=13),
legend.text=element_text(size=10),legend.title=element_text(size=10,hjust=.5),
legend.key.size=unit(.3,'cm'),
legend.key.width=unit(.6,'cm'),
legend.spacing=unit(0,'cm'),
legend.background = element_rect(color="grey",fill=NA))
label_sdMutation<-function(string){TeX(paste("$\\omega : $",string))}
negativelog_trans <- function(base = exp(1)) {
trans <- function(x) log(-x, base)
inv <- function(x) -base^x
trans_new(paste0("reverselog_", format(base)), transform = trans, inverse=inv)
}
load("data/processed/df2.RData")
load("data/processed/muta2.RData")
moe_fixed_mean<-group_by(moe_fixed,Vs,sdMutation,speedCoef)%>%
summarise_at(vars(-replicate),mean,na.rm=T)
moe_fixed_sd<-group_by(moe_fixed,Vs,sdMutation,speedCoef)%>%
summarise_at(vars(-replicate),sd,na.rm=T)
colnames(moe_fixed_sd)[-c(1:3)]<-paste0(colnames(moe_fixed_sd)[-c(1:3)],"_sd")
moe_fixed2<-left_join(moe_fixed_mean,moe_fixed_sd,by=c("Vs","sdMutation","speedCoef"))
moe_fixed2<-left_join(moe_fixed2,parameters,by=c("Vs","sdMutation"))
moe_fixed2<-mutate(moe_fixed2,speed=speedCoef*sqrt(SSE_VG),
sigmaOmega2=sdMutation^2/Vs,group=paste0("Vs",Vs,"sd",sdMutation))
so=unique(moe_fixed2$sigmaOmega2)%>%sort
so=as.character(format(so,scientific = T))%>%unique
moe_fixed2$sigmaOmega2<-format(moe_fixed2$sigmaOmega2,scientific=T)
moe_fixed2$sigmaOmega2<-factor(moe_fixed2$sigmaOmega2,level=so,label=so)
ggplot(moe_fixed2,aes(x=speed,y=mean_effect,group=group,col=sigmaOmega2))+
geom_hline(aes(yintercept=sdMutation * sqrt(2/pi)))+
geom_point()+
geom_line()+
scale_color_viridis_d(name=TeX("$\\chi"),begin=0,end=0.9)+
scale_x_continuous(trans='log10',labels=trans_format("log10", math_format(10^.x)))+
scale_y_continuous(trans='log10')+
annotate("text",x=0.8,y=0.05 * sqrt(2/pi)+0.005,label=TeX("$\\omega=0.05",output="character"),parse=T)+
annotate("text",x=0.8,y=0.1 * sqrt(2/pi)+0.02,label=TeX("$\\omega=0.1",output="character"),parse=T)+
annotate("text",x=0.8,y=0.5 * sqrt(2/pi)+0.05,label=TeX("$\\omega=0.5",output="character"),parse=T)+
labs(x="Shift speed",y=TeX("$Mean\\ \\alpha\\ of\\ fixations"))
mes_p<-ggplot(moe_fixed2,aes(x=speed/sdMutation/theta,y=mean_effect/sdMutation,group=group,col=sigmaOmega2))+
# geom_hline(yintercept=sqrt(2/pi))+
geom_point()+
geom_line()+
scale_color_viridis_d(name=TeX("$\\chi"),begin=0,end=0.9)+
#scale_x_continuous(trans='log10',labels=trans_format("log10", math_format(10^.x)))+
#scale_y_continuous(trans='log10')+
labs(x=TeX("$Shift\\ speed\\ (\\omega\\theta / generation)"),y=TeX("$Mean\\ \\alpha\\ of\\ fixations\\ (\\omega)"))
mes_p
# pdf("output/fixation_effect_polygenic.pdf",width=4,height=3)
# mes_p+theme(legend.position = "inside",legend.position.inside = c(0.8,0.3))
# dev.off()
mes_p<-ggplot(moe_fixed2,aes(x=speed/sdMutation/theta,y=mean_effect/sdMutation,group=group,col=sigmaOmega2))+
# geom_hline(yintercept=sqrt(2/pi))+
geom_point()+
geom_line()+
scale_color_viridis_d(name=TeX("$\\chi"),begin=0,end=0.9)+
scale_x_continuous(trans='log10',labels=trans_format("log10", math_format(10^.x)))+
scale_y_continuous(trans='log10')+
labs(x=TeX("$Shift\\ speed\\ (\\omega\\theta / generation)"),y=TeX("$Mean\\ \\alpha\\ of\\ fixations\\ (\\omega)"))
mes_p
knitr::opts_knit$set(root.dir = "/Users/yuna/B6/simulation/",echo = T,message =  F,warning=F,results = "hide")
load("data/processed/muta2.RData")
shift_muta2_quantile<-left_join(paras_quantile,shift_muta2,by=c('Vs','sdMutation','speedCoef'))
knitr::opts_knit$set(root.dir = "/Users/yuna/B6/simulation/",echo = T,message =  F,warning=F,results = "hide")
library(DBI)
library(RSQLite)
library(dplyr)
library(reshape2)
library(ggplot2)
library(ggrepel)# annotation in figures
library(latex2exp)
library(scales)
N=10000
geno_len=999999+1
mutation_rate=7e-10
U=2*mutation_rate*geno_len
theta=14
paras<-rbind(data.frame(Vs=1,sdMutation=0.05,speedCoef=c(0.002,0.005,0.01,0.02,0.05,0.1,0.2,0.3,0.35,0.38,0.39,0.4,0.5,0.53,0.55,0.8,1.0,1.2,1.4,1.5,1.6)),
data.frame(Vs=1,sdMutation=0.1,speedCoef=c(0.002,0.005,0.01,0.02,0.05,0.1,0.2,0.3,0.4,0.5,1.0,1.1,1.2,1.3,1.6,1.65,2.2,2.8,2.9,3.0,3.2,3.4,3.6)),
data.frame(Vs=1,sdMutation=0.5,speedCoef=c(0.002,0.005,0.01,0.02,0.05,0.1,0.2,0.3,0.4,0.5,1.0,2.0,3.0,6.5,10.0,11.0,12.0,12.5,13.5,14.0,15.0,16.0,17.0,18.0,18.2,20.0,20.5,21.0)),
data.frame(Vs=10,sdMutation=0.05,speedCoef=c(0.002,0.005,0.01,0.02,0.05,0.07,0.08,0.09,0.1,0.11,0.2,0.3,0.4)),
data.frame(Vs=10,sdMutation=0.1,speedCoef=c(0.002,0.005,0.01,0.02,0.05,0.1,0.15,0.18,0.2,0.22,0.23,0.24,0.3,0.4,0.5,0.6,0.7,0.8)),
data.frame(Vs=10,sdMutation=0.5,speedCoef=c(0.002,0.005,0.01,0.02,0.05,0.1,0.2,0.3,0.4,0.5,1.3,2.3,2.32,2.35,2.4,3.3,3.35,4.3,1.0,4.5,4.6,4.9,5.0,5.2,5.4,6.0)),
data.frame(Vs=100,sdMutation=0.05,speedCoef=c(0.002,0.005,0.01,0.02,0.025,0.03,0.031,0.035,0.04,0.05,0.1,0.2)),
data.frame(Vs=100,sdMutation=0.1,speedCoef=c(0.002,0.005,0.01,0.02,0.03,0.04,0.045,0.05,0.055,0.057,0.1,0.2,0.3)),
data.frame(Vs=100,sdMutation=0.5,speedCoef=c(0.002,0.005,0.01,0.02,0.05,0.1,0.2,0.3,0.35,0.38,0.39,0.4,0.5,0.52,0.55,0.7,0.9,1.1,1.3,1.4,1.5))
)
theme_set(theme_classic())
label_sdMutation<-function(string){TeX(paste("$\\omega : $",string))}
load("data/processed/muta2.RData")
knitr::opts_knit$set(root.dir = "/Users/yuna/B6/simulation/",echo = T,message =  F,warning=F,results = "hide")
load("data/processed/muta2.RData")
shift_muta2_quantile<-left_join(paras_quantile,shift_muta2,by=c('Vs','sdMutation','speedCoef'))
paras_quantile<-rbind(data.frame(Vs=1,sdMutation=0.05,speedCoef=c(0.002,0.2,0.5,0.8,1.2,1.6)),
data.frame(Vs=1,sdMutation=0.1,speedCoef=c(0.002,0.5,1.3,2.2,2.9,3.6)),
data.frame(Vs=1,sdMutation=0.5,speedCoef=c(0.002,3,6.5,12,16,21)),
data.frame(Vs=10,sdMutation=0.05,speedCoef=c(0.002,0.08,0.11,0.2,0.3,0.4)),
data.frame(Vs=10,sdMutation=0.1,speedCoef=c(0.002,0.15,0.3,0.5,0.6,0.8)),
data.frame(Vs=10,sdMutation=0.5,speedCoef=c(0.002,1,2.4,3.35,4.9,6)),
data.frame(Vs=100,sdMutation=0.05,speedCoef=c(0.002,0.02,0.035,0.05,0.1,0.2)),
data.frame(Vs=100,sdMutation=0.1,speedCoef=c(0.002,0.02,0.05,0.1,0.2,0.3)),
data.frame(Vs=100,sdMutation=0.5,speedCoef=c(0.002,0.3,0.55,0.9,1.3,1.5))
)
gradual_stats2<-left_join(paras_quantile,gradual_stats2,by=c('Vs','sdMutation','speedCoef'))
load("data/processed/muta2.RData")
shift_muta2_quantile<-left_join(paras_quantile,shift_muta2,by=c('Vs','sdMutation','speedCoef'))
mo_muta3_mean<-group_by(shift_muta2_quantile,Vs,sdMutation,speedCoef,generation)%>%filter(n()>=5)%>%
summarise_at(vars(-replicate),mean,na.rm=T)
mo_muta3_mean<-left_join(mo_muta3_mean,parameters,by=c('Vs','sdMutation'))%>%mutate(speed=speedCoef*sqrt(SSE_VG))
head(mo_muta3_mean)
View(shift_muta2)
ggplot(mo_muta3_mean,aes(x=generation/N -10,y=mean_frequency,group=speedCoef,col=speed/sdMutation/theta))+
geom_line()+
facet_grid(sdMutation~Vs,labeller=labeller(Vs=label_both,sdMutation=as_labeller(label_sdMutation,label_parsed)),scale='free_y')
sf_dy_p<-ggplot(mo_muta3_mean,aes(x=generation/N -10,y=mean_frequency,group=speedCoef,col=speed/sdMutation/theta))+
geom_line()+
facet_grid(sdMutation~Vs,labeller=labeller(Vs=label_both,sdMutation=as_labeller(label_sdMutation,label_parsed)),scale='free_y')+
scale_color_viridis_c(option="C")+
# scale_x_continuous(trans='log10',labels=comma)+
labs(x=TeX("$Generation\\ (\\times 10^4 )"),y=TeX("$Mean\\ allelic\\ frequency"),col=TeX("$Speed\\ (\\omega\\theta)"))
sf_dy_p
knitr::opts_knit$set(root.dir = "/Users/yuna/B6/simulation/",echo = T,message =  F,warning=F,results = "hide")
knitr::opts_knit$set(root.dir = "/Users/yuna/B6/simulation/",echo = T,message =  F,warning=F,results = "hide")
N=10000
theta=7e-10 * 2e4 * 1e6
paras<-rbind(data.frame(Vs=1,sdMutation=0.05,speedCoef=c(0.002,0.005,0.01,0.02,0.05,0.1,0.2,0.3,0.35,0.38,0.39,0.4,0.5,0.53,0.55,0.8,1.0,1.2,1.4,1.5,1.6)),
data.frame(Vs=1,sdMutation=0.1,speedCoef=c(0.002,0.005,0.01,0.02,0.05,0.1,0.2,0.3,0.4,0.5,1.0,1.1,1.2,1.3,1.6,1.65,2.2,2.8,2.9,3.0,3.2,3.4,3.6)),
data.frame(Vs=1,sdMutation=0.5,speedCoef=c(0.002,0.005,0.01,0.02,0.05,0.1,0.2,0.3,0.4,0.5,1.0,2.0,3.0,6.5,10.0,11.0,12.0,12.5,13.5,14.0,15.0,16.0,17.0,18.0,18.2,20.0,20.5,21.0)),
data.frame(Vs=10,sdMutation=0.05,speedCoef=c(0.002,0.005,0.01,0.02,0.05,0.07,0.08,0.09,0.1,0.11,0.2,0.3,0.4)),
data.frame(Vs=10,sdMutation=0.1,speedCoef=c(0.002,0.005,0.01,0.02,0.05,0.1,0.15,0.18,0.2,0.22,0.23,0.24,0.3,0.4,0.5,0.6,0.7,0.8)),
data.frame(Vs=10,sdMutation=0.5,speedCoef=c(0.002,0.005,0.01,0.02,0.05,0.1,0.2,0.3,0.4,0.5,1.3,2.3,2.32,2.35,2.4,3.3,3.35,4.3,1.0,4.5,4.6,4.9,5.0,5.2,5.4,6.0)),
data.frame(Vs=100,sdMutation=0.05,speedCoef=c(0.002,0.005,0.01,0.02,0.025,0.03,0.031,0.035,0.04,0.05,0.1,0.2)),
data.frame(Vs=100,sdMutation=0.1,speedCoef=c(0.002,0.005,0.01,0.02,0.03,0.04,0.045,0.05,0.055,0.057,0.1,0.2,0.3)),
data.frame(Vs=100,sdMutation=0.5,speedCoef=c(0.002,0.005,0.01,0.02,0.05,0.1,0.2,0.3,0.35,0.38,0.39,0.4,0.5,0.52,0.55,0.7,0.9,1.1,1.3,1.4,1.5))
)
theme_set(theme_classic())
theme_update(text=element_text(size=13),
legend.text=element_text(size=10),legend.title=element_text(size=10,hjust=.5),
legend.key.size=unit(.3,'cm'),
legend.key.width=unit(.6,'cm'),
legend.spacing=unit(0,'cm'),
legend.background = element_rect(color="grey",fill=NA))
label_sdMutation<-function(string){TeX(paste("$\\omega : $",string))}
negativelog_trans <- function(base = exp(1)) {
trans <- function(x) log(-x, base)
inv <- function(x) -base^x
trans_new(paste0("reverselog_", format(base)), transform = trans, inverse=inv)
}
moe_muta_mean<-subset(shift_muta2,generation>19.9*N)%>%
group_by(Vs,sdMutation,speedCoef,replicate)%>%
summarise_at(vars(-generation),mean,na.rm=T)%>%
group_by(Vs,sdMutation,speedCoef)%>%summarise_at(vars(-replicate),mean,na.rm=T)
moe_muta_sd<-subset(shift_muta2,generation>19.9*N)%>%
group_by(Vs,sdMutation,speedCoef,replicate)%>%
summarise_at(vars(-generation),mean,na.rm=T)%>%
group_by(Vs,sdMutation,speedCoef)%>%summarise_at(vars(-replicate),sd,na.rm=T)
colnames(moe_muta_sd)[-c(1:3)]<-paste0(colnames(moe_muta_sd)[-c(1:3)],'_sd')
moe_muta2<-left_join(moe_muta_mean,moe_muta_sd,by=c('Vs','sdMutation','speedCoef'))
moe_muta2<-left_join(moe_muta2,parameters,by=c('Vs','sdMutation'))
moe_muta2<-mutate(moe_muta2,speed=speedCoef * sqrt(SSE_VG),
sigmaOmega2=sdMutation^2/Vs,
group=paste0("Vs=",Vs,", $\\sigma_{m}=$",sdMutation))
so=unique(moe_muta2$sigmaOmega2)%>%sort
so=as.character(format(so,scientific = T))%>%unique
moe_muta2$sigmaOmega2<-format(moe_muta2$sigmaOmega2,scientific=T)
moe_muta2$sigmaOmega2<-factor(moe_muta2$sigmaOmega2,level=so,label=so)
ggplot(moe_muta2,aes(x=speed,y=n_segregations,group=group,col=sigmaOmega2))+
geom_point()+
geom_line()+
scale_color_viridis_d(name=TeX("$\\chi"),begin=0,end=0.9)+
scale_x_continuous(trans='log10',labels=trans_format("log10", math_format(10^.x)))+
labs(x="Shift speed",y="Number of segregating sites")
View(moe_muta2)
msf_p<-ggplot(moe_muta2,aes(x=speed/sdMutation/theta,y=mean_frequency,group=group,col=sigmaOmega2))+
geom_point()+
geom_line()+
scale_color_viridis_d(name=TeX("$\\chi"),begin=0,end=0.9)+
scale_x_continuous(trans='log10',labels=trans_format("log10", math_format(10^.x)))+
scale_y_continuous(trans='log10')+
labs(x=TeX("$Shift\\ speed\\ (\\omega\\theta / generation)"),y=TeX("$Mean\\ allelic\\ frequency\\ of\\ segregating\\ sites\\ (\\omega)"))
msf_p
ggplot(moe_muta2,aes(x=mean_frequency,y=mean_effect,group=group,col=sigmaOmega2))+
geom_point()+
geom_line()+
scale_color_viridis_d(name=TeX("$\\chi"),begin=0,end=0.9)
ggplot(moe_muta2,aes(x=mean_frequency,y=mean_effect,group=group,col=sigmaOmega2))+
geom_point()+
scale_color_viridis_d(name=TeX("$\\chi"),begin=0,end=0.9)
ggplot(moe_muta2,aes(x=mean_frequency,y=mean_effect,group=group,col=sigmaOmega2))+
geom_point()+
scale_color_viridis_d(name=TeX("$\\chi"),begin=0,end=0.9)+
geom_abline(intercept = 0,slope=1)
ggplot(moe_muta2,aes(x=mean_frequency,y=n_segregations,group=group,col=sigmaOmega2))+
geom_point()+
scale_color_viridis_d(name=TeX("$\\chi"),begin=0,end=0.9)+
geom_abline(intercept = 0,slope=1)
View(moe_muta2)
knitr::opts_chunk$set(echo = T,message =  F,warning=F,results = "hide")
}
head(shift_muta2)
load("data/processed/stats2.RData")
ggplot(burnin_stats2,aes(x=generation/N-10,y=varPheno_mean))+
geom_line()+
geom_ribbon(aes(ymin=varPheno_mean-varPheno_sd,ymax=varPheno_mean+varPheno_sd),col=NA,alpha=.3)+
geom_hline(aes(yintercept=2*U*Vs),col='red')+ # estimates from House-of-Card model
geom_hline(aes(yintercept=2*U*Vs/(1+Vs/(N*sdMutation^2))),col='red',linetype="dashed")+ # estimates from stochastic House-of-Card model
facet_grid(Vs~sdMutation,scales="free_y",
labeller=labeller(Vs=label_both,sdMutation=as_labeller(label_sdMutation,label_parsed)))+
labs(x=TeX("$Generation\\ (\\times 10^4 )"),y="Genetic variance")
Vg_burnin<-ggplot(burnin_stats2,aes(x=generation/N-10,y=varPheno_mean))+
geom_line()+
geom_ribbon(aes(ymin=varPheno_mean-varPheno_sd,ymax=varPheno_mean+varPheno_sd),col=NA,alpha=.3)+
geom_hline(aes(yintercept=2*U*Vs),col='red')+ # estimates from House-of-Card model
geom_hline(aes(yintercept=2*U*Vs/(1+Vs/(N*sdMutation^2))),col='red',linetype="dashed")+ # estimates from stochastic House-of-Card model
facet_grid(Vs~sdMutation,scales="free_y",
labeller=labeller(Vs=label_both,sdMutation=as_labeller(label_sdMutation,label_parsed)))+
labs(x=TeX("$Generation\\ (\\times 10^4 )"),y="Genetic variance")
Vg_burnin
setwd("output/")
pdf("dynamics_Vg_burnin.pdf")
Vg_burnin+theme(aspect.ratio = 0.6)
dev.off()
mse_p<-ggplot(moe_muta2,aes(x=speed/sdMutation/theta,y=mean_effect/sdMutation,group=group,col=sigmaOmega2))+
geom_point()+
geom_line()+
scale_color_viridis_d(name=TeX("$\\chi"),begin=0,end=0.9)+
scale_x_continuous(trans='log10',labels=trans_format("log10", math_format(10^.x)))+
scale_y_continuous(trans='log10')+
labs(x=TeX("$Shift\\ speed\\ (\\omega\\theta / generation)"),y=TeX("$Mean\\ \\alpha\\ of\\ segregating\\ sites\\ (\\omega)"))
mse_p
# pdf("output/segregating_effect_polygenic.pdf",width=4,height=3)
# mse_p+theme(legend.position = "inside",legend.position.inside = c(0.8,0.35),
#            legend.text=element_text(size=8),legend.title=element_text(size=8,hjust=.5),
#            legend.key.size=unit(.2,'cm'),legend.key.width=unit(.4,'cm'))
# dev.off()
mse_p<-ggplot(moe_muta2,aes(x=speed/sdMutation/theta,y=mean_effect/sdMutation,group=group,col=sigmaOmega2))+
geom_point()+
geom_line()+
scale_color_viridis_d(name=TeX("$\\chi"),begin=0,end=0.9)+
# scale_x_continuous(trans='log10',labels=trans_format("log10", math_format(10^.x)))+
# scale_y_continuous(trans='log10')+
labs(x=TeX("$Shift\\ speed\\ (\\omega\\theta / generation)"),y=TeX("$Mean\\ \\alpha\\ of\\ segregating\\ sites\\ (\\omega)"))
mse_p
# pdf("output/segregating_effect_polygenic.pdf",width=4,height=3)
# mse_p+theme(legend.position = "inside",legend.position.inside = c(0.8,0.35),
#            legend.text=element_text(size=8),legend.title=element_text(size=8,hjust=.5),
#            legend.key.size=unit(.2,'cm'),legend.key.width=unit(.4,'cm'))
# dev.off()
mse_p<-ggplot(moe_muta2,aes(x=speed/sdMutation/theta,y=mean_effect/sdMutation,group=group,col=sigmaOmega2))+
geom_point()+
geom_line()+
scale_color_viridis_d(name=TeX("$\\chi"),begin=0,end=0.9)+
scale_x_continuous(trans='log10',labels=trans_format("log10", math_format(10^.x)))+
scale_y_continuous(trans='log10')+
labs(x=TeX("$Shift\\ speed\\ (\\omega\\theta / generation)"),y=TeX("$Mean\\ \\alpha\\ of\\ segregating\\ sites\\ (\\omega)"))
mse_p
# pdf("output/segregating_effect_polygenic.pdf",width=4,height=3)
# mse_p+theme(legend.position = "inside",legend.position.inside = c(0.8,0.35),
#            legend.text=element_text(size=8),legend.title=element_text(size=8,hjust=.5),
#            legend.key.size=unit(.2,'cm'),legend.key.width=unit(.4,'cm'))
# dev.off()
mes_p<-ggplot(moe_fixed2,aes(x=speed/sdMutation/theta,y=mean_effect/sdMutation,group=group,col=sigmaOmega2))+
# geom_hline(yintercept=sqrt(2/pi))+
geom_point()+
geom_line()+
scale_color_viridis_d(name=TeX("$\\chi"),begin=0,end=0.9)+
#scale_x_continuous(trans='log10',labels=trans_format("log10", math_format(10^.x)))+
#scale_y_continuous(trans='log10')+
labs(x=TeX("$Shift\\ speed\\ (\\omega\\theta / generation)"),y=TeX("$Mean\\ \\alpha\\ of\\ fixations\\ (\\omega)"))
load("data/processed/muta2.RData")
load("data/processed/muta2.RData")
knitr::opts_knit$set(root.dir = "/Users/yuna/B6/simulation/",echo = T,message =  F,warning=F,results = "hide")
knitr::opts_knit$set(root.dir = "/Users/yuna/B6/simulation/",echo = T,message =  F,warning=F,results = "hide")
N=10000
theta=7e-10 * 2e4 * 1e6
paras<-rbind(data.frame(Vs=1,sdMutation=0.05,speedCoef=c(0.002,0.005,0.01,0.02,0.05,0.1,0.2,0.3,0.35,0.38,0.39,0.4,0.5,0.53,0.55,0.8,1.0,1.2,1.4,1.5,1.6)),
data.frame(Vs=1,sdMutation=0.1,speedCoef=c(0.002,0.005,0.01,0.02,0.05,0.1,0.2,0.3,0.4,0.5,1.0,1.1,1.2,1.3,1.6,1.65,2.2,2.8,2.9,3.0,3.2,3.4,3.6)),
data.frame(Vs=1,sdMutation=0.5,speedCoef=c(0.002,0.005,0.01,0.02,0.05,0.1,0.2,0.3,0.4,0.5,1.0,2.0,3.0,6.5,10.0,11.0,12.0,12.5,13.5,14.0,15.0,16.0,17.0,18.0,18.2,20.0,20.5,21.0)),
data.frame(Vs=10,sdMutation=0.05,speedCoef=c(0.002,0.005,0.01,0.02,0.05,0.07,0.08,0.09,0.1,0.11,0.2,0.3,0.4)),
data.frame(Vs=10,sdMutation=0.1,speedCoef=c(0.002,0.005,0.01,0.02,0.05,0.1,0.15,0.18,0.2,0.22,0.23,0.24,0.3,0.4,0.5,0.6,0.7,0.8)),
data.frame(Vs=10,sdMutation=0.5,speedCoef=c(0.002,0.005,0.01,0.02,0.05,0.1,0.2,0.3,0.4,0.5,1.3,2.3,2.32,2.35,2.4,3.3,3.35,4.3,1.0,4.5,4.6,4.9,5.0,5.2,5.4,6.0)),
data.frame(Vs=100,sdMutation=0.05,speedCoef=c(0.002,0.005,0.01,0.02,0.025,0.03,0.031,0.035,0.04,0.05,0.1,0.2)),
data.frame(Vs=100,sdMutation=0.1,speedCoef=c(0.002,0.005,0.01,0.02,0.03,0.04,0.045,0.05,0.055,0.057,0.1,0.2,0.3)),
data.frame(Vs=100,sdMutation=0.5,speedCoef=c(0.002,0.005,0.01,0.02,0.05,0.1,0.2,0.3,0.35,0.38,0.39,0.4,0.5,0.52,0.55,0.7,0.9,1.1,1.3,1.4,1.5))
)
theme_set(theme_classic())
theme_update(text=element_text(size=13),
legend.text=element_text(size=10),legend.title=element_text(size=10,hjust=.5),
legend.key.size=unit(.3,'cm'),
legend.key.width=unit(.6,'cm'),
legend.spacing=unit(0,'cm'),
legend.background = element_rect(color="grey",fill=NA))
label_sdMutation<-function(string){TeX(paste("$\\omega : $",string))}
negativelog_trans <- function(base = exp(1)) {
trans <- function(x) log(-x, base)
inv <- function(x) -base^x
trans_new(paste0("reverselog_", format(base)), transform = trans, inverse=inv)
}
load("data/processed/muta2.RData")
moe_fixed_mean<-group_by(moe_fixed,Vs,sdMutation,speedCoef)%>%
summarise_at(vars(-replicate),mean,na.rm=T)
moe_fixed_sd<-group_by(moe_fixed,Vs,sdMutation,speedCoef)%>%
summarise_at(vars(-replicate),sd,na.rm=T)
colnames(moe_fixed_sd)[-c(1:3)]<-paste0(colnames(moe_fixed_sd)[-c(1:3)],"_sd")
moe_fixed2<-left_join(moe_fixed_mean,moe_fixed_sd,by=c("Vs","sdMutation","speedCoef"))
moe_fixed2<-left_join(moe_fixed2,parameters,by=c("Vs","sdMutation"))
moe_fixed2<-mutate(moe_fixed2,speed=speedCoef*sqrt(SSE_VG),
sigmaOmega2=sdMutation^2/Vs,group=paste0("Vs",Vs,"sd",sdMutation))
so=unique(moe_fixed2$sigmaOmega2)%>%sort
so=as.character(format(so,scientific = T))%>%unique
moe_fixed2$sigmaOmega2<-format(moe_fixed2$sigmaOmega2,scientific=T)
moe_fixed2$sigmaOmega2<-factor(moe_fixed2$sigmaOmega2,level=so,label=so)
mes_p<-ggplot(moe_fixed2,aes(x=speed/sdMutation/theta,y=mean_effect/sdMutation,group=group,col=sigmaOmega2))+
# geom_hline(yintercept=sqrt(2/pi))+
geom_point()+
geom_line()+
scale_color_viridis_d(name=TeX("$\\chi"),begin=0,end=0.9)+
#scale_x_continuous(trans='log10',labels=trans_format("log10", math_format(10^.x)))+
#scale_y_continuous(trans='log10')+
labs(x=TeX("$Shift\\ speed\\ (\\omega\\theta / generation)"),y=TeX("$Mean\\ \\alpha\\ of\\ fixations\\ (\\omega)"))
mes_p
# pdf("output/fixation_effect_polygenic.pdf",width=4,height=3)
# mes_p+theme(legend.position = "inside",legend.position.inside = c(0.8,0.3))
# dev.off()
mes_p<-ggplot(moe_fixed2,aes(x=speed/sdMutation/theta,y=mean_effect/sdMutation,group=group,col=sigmaOmega2))+
# geom_hline(yintercept=sqrt(2/pi))+
geom_point()+
geom_line()+
scale_color_viridis_d(name=TeX("$\\chi"),begin=0,end=0.9)+
scale_x_continuous(trans='log10',labels=trans_format("log10", math_format(10^.x)))+
scale_y_continuous(trans='log10')+
labs(x=TeX("$Shift\\ speed\\ (\\omega\\theta / generation)"),y=TeX("$Mean\\ \\alpha\\ of\\ fixations\\ (\\omega)"))
mes_p
# pdf("output/fixation_effect_polygenic.pdf",width=4,height=3)
# mes_p+theme(legend.position = "inside",legend.position.inside = c(0.8,0.3))
# dev.off()
